{"version":3,"sources":["App.js","components/Keypad.js","components/Result.js","logo.svg","serviceWorker.js","index.js"],"names":["App","state","result","reset","_this","setState","backspace","slice","evaluate","eval","onClick","button","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_components_Result_js__WEBPACK_IMPORTED_MODULE_9__","this","_components_Keypad_js__WEBPACK_IMPORTED_MODULE_8__","Component","Keypad","name","e","props","target","Result","module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","ReactDOM","render","react_default","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mmDAOMA,ovBAEJC,MAAQ,CACNC,OAAQ,UAGVC,MAAQ,WACNC,MAAKC,SAAS,CACZH,OAAQ,YAIZI,UAAY,WACVF,MAAKC,SAAS,CACZH,OAAQE,MAAKH,MAAMC,OAAOK,MAAM,GAAI,YAIxCC,SAAW,WACTJ,MAAKC,SAAS,CACZH,OAASO,KAAKL,MAAKH,MAAMC,QAAW,YAIxCQ,QAAU,SAAAC,GACM,SAAXA,EACDP,MAAKE,YAGY,MAAXK,EACNP,MAAKI,WAGY,MAAXG,EACNP,MAAKD,QAILC,MAAKC,SAAS,CACZH,OAAQE,MAAKH,MAAMC,OAASS,qXAMhC,OACEC,2CAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,2CAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,2CAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,KACAH,2CAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,2CAAAC,EAAAC,cAACE,mDAAA,EAAD,CACAd,OAAQe,KAAKhB,MAAMC,SAEnBU,2CAAAC,EAAAC,cAACI,mDAAA,EAAD,CAAQR,QAASO,KAAKP,UAEtBE,2CAAAC,EAAAC,cAAA,WACAF,2CAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,qCAEJH,2CAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,gBA1DQI,8CAiEHnB,+GCtEToB,mLAIG,IAAAhB,EAAAa,KACP,OACCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACdH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBM,KAAK,IAAIX,QAAS,SAAAY,GAAC,OAAIlB,EAAKmB,MAAMb,QAAQY,EAAEE,OAAOH,QAArF,KACAT,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBM,KAAK,IAAIX,QAAS,SAAAY,GAAC,OAAIlB,EAAKmB,MAAMb,QAAQY,EAAEE,OAAOH,QAArF,KACAT,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBM,KAAK,OAAOX,QAAS,SAAAY,GAAC,OAAIlB,EAAKmB,MAAMb,QAAQY,EAAEE,OAAOH,QAAxF,MACAT,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBM,KAAK,IAAIX,QAAS,SAAAY,GAAC,OAAIlB,EAAKmB,MAAMb,QAAQY,EAAEE,OAAOH,QAArF,KAJD,IAIwGT,EAAAC,EAAAC,cAAA,WAEvGF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBM,KAAK,IAAIX,QAAS,SAAAY,GAAC,OAAIlB,EAAKmB,MAAMb,QAAQY,EAAEE,OAAOH,QAArF,KACAT,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBM,KAAK,IAAIX,QAAS,SAAAY,GAAC,OAAIlB,EAAKmB,MAAMb,QAAQY,EAAEE,OAAOH,QAArF,KACAT,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBM,KAAK,IAAIX,QAAS,SAAAY,GAAC,OAAIlB,EAAKmB,MAAMb,QAAQY,EAAEE,OAAOH,QAArF,KACAT,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBM,KAAK,IAAIX,QAAS,SAAAY,GAAC,OAAIlB,EAAKmB,MAAMb,QAAQY,EAAEE,OAAOH,QAArF,KATD,IASwGT,EAAAC,EAAAC,cAAA,WAEvGF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBM,KAAK,IAAIX,QAAS,SAAAY,GAAC,OAAIlB,EAAKmB,MAAMb,QAAQY,EAAEE,OAAOH,QAArF,KACAT,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBM,KAAK,IAAIX,QAAS,SAAAY,GAAC,OAAIlB,EAAKmB,MAAMb,QAAQY,EAAEE,OAAOH,QAArF,KACAT,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBM,KAAK,IAAIX,QAAS,SAAAY,GAAC,OAAIlB,EAAKmB,MAAMb,QAAQY,EAAEE,OAAOH,QAArF,KACAT,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBM,KAAK,IAAIX,QAAS,SAAAY,GAAC,OAAIlB,EAAKmB,MAAMb,QAAQY,EAAEE,OAAOH,QAArF,KAdD,IAcwGT,EAAAC,EAAAC,cAAA,WAEvGF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBM,KAAK,IAAIX,QAAS,SAAAY,GAAC,OAAIlB,EAAKmB,MAAMb,QAAQY,EAAEE,OAAOH,QAArF,KACAT,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBM,KAAK,IAAIX,QAAS,SAAAY,GAAC,OAAIlB,EAAKmB,MAAMb,QAAQY,EAAEE,OAAOH,QAArF,KACAT,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBM,KAAK,IAAIX,QAAS,SAAAY,GAAC,OAAIlB,EAAKmB,MAAMb,QAAQY,EAAEE,OAAOH,QAArF,KACAT,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBM,KAAK,IAAIX,QAAS,SAAAY,GAAC,OAAIlB,EAAKmB,MAAMb,QAAQY,EAAEE,OAAOH,QAArF,KAnBD,IAmBwGT,EAAAC,EAAAC,cAAA,WAEvGF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBM,KAAK,IAAIX,QAAS,SAAAY,GAAC,OAAIlB,EAAKmB,MAAMb,QAAQY,EAAEE,OAAOH,QAArF,KACAT,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBM,KAAK,IAAIX,QAAS,SAAAY,GAAC,OAAIlB,EAAKmB,MAAMb,QAAQY,EAAEE,OAAOH,QAArF,KACAT,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBM,KAAK,IAAIX,QAAS,SAAAY,GAAC,OAAIlB,EAAKmB,MAAMb,QAAQY,EAAEE,OAAOH,QAArF,KACAT,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBM,KAAK,IAAIX,QAAS,SAAAY,GAAC,OAAIlB,EAAKmB,MAAMb,QAAQY,EAAEE,OAAOH,QAArF,QAxBD,IAwBwGT,EAAAC,EAAAC,cAAA,mBA9BtFK,aAmCNC,2FCnCTK,mLAIWR,KAAKM,MAAMrB,OAArBA,OACL,OACCU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,SAAIG,KAAKM,MAAMrB,gBAPGiB,aAYNM,+ECdfC,EAAAC,QAAiBC,EAAAC,EAAuB,2ICYpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOC,EAAAxB,EAAAC,cAACd,EAAA,EAAD,MAASsC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a936a077.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Keypad from './components/Keypad.js';\nimport Result from './components/Result.js';\n\nclass App extends Component {\n\n  state = {\n    result: \"\"\n  }\n\n  reset = () => {\n    this.setState({\n      result: \"\"\n    })\n  };\n\n  backspace = () => {\n    this.setState({\n      result: this.state.result.slice(0, -1)\n    })\n  };\n\n  evaluate = () => {\n    this.setState({\n      result: (eval(this.state.result)) + \"\"\n    })\n  };\n\n  onClick = button => {\n    if(button === \"back\"){\n      this.backspace();\n    }\n\n    else if(button === \"=\"){\n      this.evaluate();\n    }\n\n    else if(button === \"C\"){\n      this.reset();\n    }\n\n    else{\n      this.setState({\n        result: this.state.result + button\n      })\n    }\n  };\n\n  render(){\n    return (\n      <div className=\"App\">\n        <div className=\"row\">\n          <div className=\"column outside\">.</div>\n          <div className=\"column middle\">\n              <Result \n              result={this.state.result}\n              />\n              <Keypad onClick={this.onClick}/>\n\n              <br/>\n              <div className=\"credits\">version 1.0 Created by Jay Trask</div>\n          </div>\n          <div className=\"column outside\">.</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react'\r\n\r\nclass Keypad extends Component{\r\n\r\n\r\n\t\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"keypad\">\r\n\t\t\t\t<button className=\"keypad-button\" name=\"(\" onClick={e => this.props.onClick(e.target.name)}>(</button>\r\n\t\t\t\t<button className=\"keypad-button\" name=\")\" onClick={e => this.props.onClick(e.target.name)}>)</button>\r\n\t\t\t\t<button className=\"keypad-button\" name=\"back\" onClick={e => this.props.onClick(e.target.name)}>CE</button>\r\n\t\t\t\t<button className=\"keypad-button\" name=\"C\" onClick={e => this.props.onClick(e.target.name)}>C</button>\t<br/>\r\n\r\n\t\t\t\t<button className=\"keypad-button\" name=\"1\" onClick={e => this.props.onClick(e.target.name)}>1</button>\r\n\t\t\t\t<button className=\"keypad-button\" name=\"2\" onClick={e => this.props.onClick(e.target.name)}>2</button>\r\n\t\t\t\t<button className=\"keypad-button\" name=\"3\" onClick={e => this.props.onClick(e.target.name)}>3</button>\r\n\t\t\t\t<button className=\"keypad-button\" name=\"+\" onClick={e => this.props.onClick(e.target.name)}>+</button>\t<br/>\r\n\r\n\t\t\t\t<button className=\"keypad-button\" name=\"4\" onClick={e => this.props.onClick(e.target.name)}>4</button>\r\n\t\t\t\t<button className=\"keypad-button\" name=\"5\" onClick={e => this.props.onClick(e.target.name)}>5</button>\r\n\t\t\t\t<button className=\"keypad-button\" name=\"6\" onClick={e => this.props.onClick(e.target.name)}>6</button>\r\n\t\t\t\t<button className=\"keypad-button\" name=\"-\" onClick={e => this.props.onClick(e.target.name)}>-</button>\t<br/>\r\n\r\n\t\t\t\t<button className=\"keypad-button\" name=\"7\" onClick={e => this.props.onClick(e.target.name)}>7</button>\r\n\t\t\t\t<button className=\"keypad-button\" name=\"8\" onClick={e => this.props.onClick(e.target.name)}>8</button>\r\n\t\t\t\t<button className=\"keypad-button\" name=\"9\" onClick={e => this.props.onClick(e.target.name)}>9</button>\r\n\t\t\t\t<button className=\"keypad-button\" name=\"X\" onClick={e => this.props.onClick(e.target.name)}>X</button>\t<br />\r\n\r\n\t\t\t\t<button className=\"keypad-button\" name=\".\" onClick={e => this.props.onClick(e.target.name)}>.</button>\r\n\t\t\t\t<button className=\"keypad-button\" name=\"0\" onClick={e => this.props.onClick(e.target.name)}>0</button>\r\n\t\t\t\t<button className=\"keypad-button\" name=\"=\" onClick={e => this.props.onClick(e.target.name)}>=</button>\r\n\t\t\t\t<button className=\"keypad-button\" name=\"/\" onClick={e => this.props.onClick(e.target.name)}>รท</button>\t<br/>\r\n\t\t\t</div> \r\n\t\t);\r\n\t}\r\n}\r\nexport default Keypad;","import React, { Component } from 'react'\r\n\r\nclass Result extends Component{\r\n\r\n\t\r\n\trender(){\r\n\t\tlet {result} = this.props.result;\r\n\t\treturn(\r\n\t\t\t<div className=\"result\">\r\n\t\t\t<p>{this.props.result}</p>\r\n\t\t\t</div> \r\n\t\t);\r\n\t}\r\n}\r\nexport default Result;","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}